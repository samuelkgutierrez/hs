/* Implementation of leq 3 2 */
app (
    app (
        fix (
            abs (leq: (Nat -> (Nat -> Bool)) .
                abs (a:Nat .
                    abs (b:Nat .
                        if iszero a
                        then true
                        else if iszero b
                                 then false
                                 else app (app (leq, pred a), pred b)
                             fi
                        fi
                    )
                )
            )
        )
        , succ (succ (succ 0)) /* a */
    )
    , succ (succ 0) /* b */
)
